<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Cecil&#x27;s Note - post</title>
    <subtitle>Theory will only take you so far</subtitle>
    <link rel="self" type="application/atom+xml" href="https://g-song-i.github.io/tags/post/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://g-song-i.github.io"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2024-09-09T00:00:00+00:00</updated>
    <id>https://g-song-i.github.io/tags/post/atom.xml</id>
    <entry xml:lang="en">
        <title>W(Where)TF is Docker daemon.json File?</title>
        <published>2024-09-09T00:00:00+00:00</published>
        <updated>2024-09-09T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://g-song-i.github.io/posts/w-where-tf-is-docker-daemon-json-file/"/>
        <id>https://g-song-i.github.io/posts/w-where-tf-is-docker-daemon-json-file/</id>
        
        <content type="html" xml:base="https://g-song-i.github.io/posts/w-where-tf-is-docker-daemon-json-file/">&lt;h1 id=&quot;overview&quot;&gt;Overview&lt;&#x2F;h1&gt;
&lt;p&gt;This article looks into the details of Docker daemon configurations after I noticed that the &lt;code&gt;daemon.json&lt;&#x2F;code&gt; file was missing from my host system. It explains what the Docker daemon is, what it does, and why the &lt;code&gt;daemon.json&lt;&#x2F;code&gt; file is missing. The discussion includes how Docker is typically set up and how to access and understand the daemon&#x27;s settings. &lt;&#x2F;p&gt;
&lt;h1 id=&quot;backgrounds&quot;&gt;Backgrounds&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;what-is-docker-daemon&quot;&gt;What is Docker Daemon?&lt;&#x2F;h2&gt;
&lt;p&gt;Let&#x27;s grab some background first. What do you think the Docker daemon is?&lt;&#x2F;p&gt;
&lt;p&gt;The Docker daemon is a part of the Docker engine, running on the host OS as a process. According to &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.aquasec.com&#x2F;cloud-native-academy&#x2F;docker-container&#x2F;docker-architecture&#x2F;#:~:text=Docker%20Daemon%3A%20A%20persistent%20background,API%20requests%20and%20processes%20them&quot;&gt;Aqua Security&lt;&#x2F;a&gt;, the Docker daemon is described as follows:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;A persistent background process that manages Docker images, containers, networks, and storage volumes. The Docker daemon constantly listens for Docker API requests and processes them.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;what-is-docker-s-daemon-json&quot;&gt;What is Docker’s daemon.json?&lt;&#x2F;h2&gt;
&lt;p&gt;The &lt;code&gt;daemon.json&lt;&#x2F;code&gt; file is used for configuring the Docker daemon. According to the official Docker &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.docker.com&#x2F;engine&#x2F;daemon&#x2F;start&#x2F;&quot;&gt;documentation&lt;&#x2F;a&gt;, there are two ways to configure the Docker daemon:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Use a JSON configuration file. This is the preferred option, since it keeps all configurations in a single place.&lt;&#x2F;li&gt;
&lt;li&gt;Use flags when starting &lt;code&gt;dockerd&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;You can use both ways for configuring the daemon. According to &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.devopsschool.com&#x2F;blog&#x2F;how-to-configure-docker-daemon-with-a-configuration-file&#x2F;&quot;&gt;this post&lt;&#x2F;a&gt;, setting it with a JSON file is preferred, but I&#x27;m not sure (it&#x27;s not from the official documentation). &lt;&#x2F;p&gt;
&lt;h1 id=&quot;how-to-get-docker-daemon-configuration&quot;&gt;How to get Docker daemon configuration?&lt;&#x2F;h1&gt;
&lt;p&gt;Now you know that the Docker daemon is a process responsible for managing Docker&#x27;s components, and there is a file named &lt;code&gt;daemon.json&lt;&#x2F;code&gt; that contains configurations for the Docker daemon. So, how do you get the Docker daemon&#x27;s configuration when Docker is running? There are two options:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Get the configuration from the &lt;code&gt;daemon.json&lt;&#x2F;code&gt; file if the daemon is started with it&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Get the configuration using the &lt;code&gt;docker info&lt;&#x2F;code&gt; command&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;You can use the &lt;code&gt;ps&lt;&#x2F;code&gt; command to inspect the &lt;code&gt;dockerd&lt;&#x2F;code&gt; process, but it might not display all the configurations we need. Additionally, you can check the configuration file, &lt;code&gt;daemon.json&lt;&#x2F;code&gt;, but there is no direct way to confirm whether the current Docker daemon was started using that specific file.&lt;&#x2F;p&gt;
&lt;p&gt;But, we can assume that if the &lt;code&gt;ps&lt;&#x2F;code&gt; command returns a path to a file with the &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.docker.com&#x2F;engine&#x2F;daemon&#x2F;#configuration-file&quot;&gt;&lt;code&gt;--config-file&lt;&#x2F;code&gt;&lt;&#x2F;a&gt; parameter, then &lt;code&gt;dockerd&lt;&#x2F;code&gt; was started with that file. &lt;strong&gt;If not, &lt;code&gt;dockerd&lt;&#x2F;code&gt; was started with the default configuration, either from their default location or the configuration&lt;&#x2F;strong&gt; embedded in the software upon installation. You can refer &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;moby&#x2F;moby&#x2F;tree&#x2F;master&#x2F;daemon&#x2F;config&quot;&gt;here&lt;&#x2F;a&gt; to see the code for default configuration.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;daemon-file-s-default-location&quot;&gt;Daemon file’s default location&lt;&#x2F;h2&gt;
&lt;p&gt;According to &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;docs.docker.com&#x2F;engine&#x2F;daemon&#x2F;#configuration-file&quot;&gt;this post&lt;&#x2F;a&gt; from the Docker docs, the Docker daemon expects to find the configuration file by default at this location:&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;OS&lt;&#x2F;th&gt;&lt;th&gt;File&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;Linux, regular setup&lt;&#x2F;td&gt;&lt;td&gt;&#x2F;etc&#x2F;docker&#x2F;daemon.json&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Linux, rootless mode&lt;&#x2F;td&gt;&lt;td&gt;~&#x2F;.config&#x2F;docker&#x2F;daemon.json&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;Windows&lt;&#x2F;td&gt;&lt;td&gt;C:\ProgramData\docker\config\daemon.json&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h2 id=&quot;w-where-tf-is-my-daemon-json&quot;&gt;W(Where)TF is my daemon.json????&lt;&#x2F;h2&gt;
&lt;p&gt;This part is the most important in this post. I couldn’t find my &lt;code&gt;daemon.json&lt;&#x2F;code&gt; in the default location. What’s happening? Like what I said, Dockerd can be started with the default configuration without a configuration file, as &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;43689271&#x2F;wheres-dockers-daemon-json-missing&quot;&gt;it is not created automatically&lt;&#x2F;a&gt;. That’s the reason you can’t find it in your location.&lt;&#x2F;p&gt;
&lt;p&gt;You can create the file if you want to boot Dockerd with that in the default location, or you can use another location and specify the customized location manually. So, do not panic if there is no &lt;code&gt;daemon.json&lt;&#x2F;code&gt;; you can still get the daemon’s configuration in other ways&lt;&#x2F;p&gt;
&lt;h1 id=&quot;get-the-current-dockerd-configuration&quot;&gt;Get the current Dockerd configuration&lt;&#x2F;h1&gt;
&lt;p&gt;Here, I describe ways to get the Dockerd configuration. As I mentioned before, you can find it in the &lt;code&gt;daemon.json&lt;&#x2F;code&gt; file or use the &lt;code&gt;docker info&lt;&#x2F;code&gt; command. Let’s assume that you have not created a &lt;code&gt;daemon.json&lt;&#x2F;code&gt; file before. Then, there are two options:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Get the configuration using the &lt;code&gt;docker info&lt;&#x2F;code&gt; command.&lt;&#x2F;li&gt;
&lt;li&gt;Get the configuration with the code.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Hah? Another option pops up, right? Let’s start!&lt;&#x2F;p&gt;
&lt;h2 id=&quot;get-the-configuration-with-docker-info&quot;&gt;Get the configuration with docker info&lt;&#x2F;h2&gt;
&lt;p&gt;First, you can see your daemon&#x27;s configuration using the &lt;code&gt;docker info&lt;&#x2F;code&gt; command. Here is what the result looks like:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#6c7079;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; docker info
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Client:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; Docker Engine - Community
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Version:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    27.0.3
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Context:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    default
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Debug&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; Mode: false
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Plugins:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;buildx:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; Docker Buildx (Docker Inc.)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Version:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  v0.15.1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Path:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;     &#x2F;usr&#x2F;libexec&#x2F;docker&#x2F;cli-plugins&#x2F;docker-buildx
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;compose:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; Docker Compose (Docker Inc.)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Version:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  v2.28.1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Path:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;     &#x2F;usr&#x2F;libexec&#x2F;docker&#x2F;cli-plugins&#x2F;docker-compose
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Server:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Containers:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; 18
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Running:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; 17
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Paused:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; 0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Stopped:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; 1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Images:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; 22
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Server&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; Version: 27.0.3
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Storage&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; Driver: overlay2
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Backing&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; Filesystem: extfs
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Supports&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; d_type: true
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Using&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; metacopy: false
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Native&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; Overlay Diff: true
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;userxattr:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; false
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Logging&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; Driver: json-file
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Cgroup&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; Driver: systemd
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Cgroup&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; Version: 2
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Plugins:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Volume:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; local
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Network:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; bridge host ipvlan macvlan null overlay
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Log:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; awslogs fluentd gcplogs gelf journald json-file local splunk syslog
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Swarm:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; inactive
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Runtimes:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; runc io.containerd.runc.v2
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Default&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; Runtime: runc
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Init&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; Binary: docker-init
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;containerd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; version: ae71819c4f5e67bb4d5ae76a6b735f29cc25774e
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;runc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; version: v1.1.13-0-g58aa920
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;init&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; version: de40ad0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Security&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; Options:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;apparmor
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;seccomp
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Profile:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; builtin
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;cgroupns
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Kernel&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; Version: 6.5.0-44-generic
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Operating&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; System: Ubuntu 22.04.4 LTS
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;OSType:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; linux
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Architecture:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; x86_64
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;CPUs:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; 16
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Total&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; Memory: 62.88GiB
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Name: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;hostname&lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;ID:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; b3f46722-9862-43fd-913d-c8a4bd6a349e
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Docker&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; Root Dir: &#x2F;var&#x2F;lib&#x2F;docker
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Debug&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; Mode: false
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Experimental:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; false
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Insecure&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; Registries:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;127.0.0.0&#x2F;8
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Live&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; Restore Enabled: false
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;get-the-configuration-with-the-code-go-sdk&quot;&gt;Get the configuration with the code (Go SDK)&lt;&#x2F;h2&gt;
&lt;p&gt;Moreover, you can write code to retrieve the configuration! I use the Go SDK for this purpose. Here is an example, and you will need to configure the way to handle the result appropriately.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;go&quot; style=&quot;background-color:#2b303b;color:#6c7079;&quot; class=&quot;language-go &quot;&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;package &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;collector
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;context&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;agentless-for-docker-dev&#x2F;util&#x2F;client&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;github.com&#x2F;docker&#x2F;docker&#x2F;api&#x2F;types&#x2F;system&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;func &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5cb3fa;&quot;&gt;GetDetailedSystemInfo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;dockerClient &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;client&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;DockerClient&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;) (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;system&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;Info&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;error&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;) {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;info&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;err &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;dockerClient&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Client&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Info&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;context&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Background&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;())
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;err &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;nil &lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;system&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Info&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;{}, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;err
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;info&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;nil
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The result contains a lot of data, as described &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;moby&#x2F;moby&#x2F;blob&#x2F;master&#x2F;api&#x2F;types&#x2F;system&#x2F;info.go&quot;&gt;here&lt;&#x2F;a&gt;. It might differ from the result of the command in some ways, so you need to make an effort to identify the differences and choose the right option for you. Part of the result looks like this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#6c7079;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;ID&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;b3f46722-9862-43fd-913d-c8a4bd6a349e&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Containers&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; 18,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;ContainersRunning&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; 17,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;ContainersPaused&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; 0,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;ContainersStopped&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; 1,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Images&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; 22,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Driver&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;overlay2&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;DriverStatus&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; [
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5ebfcc;&quot;&gt;[
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Backing Filesystem&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;extfs&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;],
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5ebfcc;&quot;&gt;[
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Supports d_type&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;true&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;],
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5ebfcc;&quot;&gt;[
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Using metacopy&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;false&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;],
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5ebfcc;&quot;&gt;[
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Native Overlay Diff&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;true&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;],
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5ebfcc;&quot;&gt;[
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;userxattr&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;false&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;],
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Plugins&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Volume&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;: [
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;local&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    ],
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Network&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;: [
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;bridge&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;host&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;ipvlan&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;macvlan&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;null&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;overlay&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    ],
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Authorization&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;: null,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Log&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;: [
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;awslogs&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;fluentd&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;gcplogs&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;gelf&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;journald&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;json-file&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;local&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;splunk&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;syslog&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    ]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  },
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;MemoryLimit&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; true,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;SwapLimit&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; true,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;CpuCfsPeriod&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; true,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;CpuCfsQuota&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; true,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;CPUShares&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; true,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;CPUSet&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; true,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;PidsLimit&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; true,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;IPv4Forwarding&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; true,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;BridgeNfIptables&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; true,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;BridgeNfIp6tables&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; true,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Debug&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; false,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;...
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h1&gt;
&lt;p&gt;To wrap up, I found out why the &lt;code&gt;daemon.json&lt;&#x2F;code&gt; file was missing from my host system. It was because the Docker daemon was started with the default configuration. I also learned how to get the Docker daemon&#x27;s configuration using the &lt;code&gt;docker info&lt;&#x2F;code&gt; command and the Go SDK. I hope this post helps you understand the Docker daemon and its configuration better. Thank you for reading!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Setting Up Kubernetes Cluster on AWS EC2 with Calico CNI</title>
        <published>2024-09-02T00:00:00+00:00</published>
        <updated>2024-09-02T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://g-song-i.github.io/posts/setting-up-kubernetes-cluster-on-aws-ec2-with-calico-cni/"/>
        <id>https://g-song-i.github.io/posts/setting-up-kubernetes-cluster-on-aws-ec2-with-calico-cni/</id>
        
        <content type="html" xml:base="https://g-song-i.github.io/posts/setting-up-kubernetes-cluster-on-aws-ec2-with-calico-cni/">&lt;h1 id=&quot;overview&quot;&gt;Overview&lt;&#x2F;h1&gt;
&lt;p&gt;In this post, I am going to explain how to set up a Kubernetes cluster within the AWS infrastructure. Here, I set up a master node and two worker nodes using AWS EC2 instances. I refer to &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;mrmaheshrajput.medium.com&#x2F;deploy-kubernetes-cluster-on-aws-ec2-instances-f3eeca9e95f1&quot;&gt;this post&lt;&#x2F;a&gt; for this task, but I utilize Calico as the CNI plugin instead of WeaveNet, which was used in the post I mentioned. The choice of CNI plugin is up to you.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;infra-info&quot;&gt;Infra Info&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;09e38d81-057c-4516-8241-9883e9ac6d74&quot; alt=&quot;K8S_ARCH_AWS.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;create-vpc&quot;&gt;Create VPC&lt;&#x2F;h1&gt;
&lt;p&gt;First, I created a VPC for this task. To avoid using the same CIDR range as the Calico network, I chose the “172.16.0.0&#x2F;16” range. Since this cluster is not intended for active development or production, I opted to use just one availability zone and one subnet. You can add more if needed.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;4fad8d5a-4c93-4f6b-940c-f20983eeaf44&quot; alt=&quot;image.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;create-sg&quot;&gt;Create SG&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;for-master&quot;&gt;For Master&lt;&#x2F;h2&gt;
&lt;p&gt;You now need to create security groups for the master and worker nodes, respectively. You can see &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;reference&#x2F;networking&#x2F;ports-and-protocols&#x2F;&quot;&gt;the ports&lt;&#x2F;a&gt; that need to be opened.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;1fc46aad-ae7a-4eab-b1e2-b62e43ea9e30&quot; alt=&quot;Below&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The security group displayed below is the result of the initial configuration. Additional ports will need to be added later for the CNI plugin (Calico, in my case).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;e2bed3c3-28e3-4c79-bc63-7bbab501ff82&quot; alt=&quot;image.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;for-workers&quot;&gt;For Workers&lt;&#x2F;h2&gt;
&lt;p&gt;For the next step, create the worker node&#x27;s security group. This security group needs to include &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;reference&#x2F;networking&#x2F;ports-and-protocols&#x2F;&quot;&gt;ports&lt;&#x2F;a&gt; for the kubelet API, kube-proxy, and the port range for NodePort services.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;92270fec-a749-4847-bf90-d87579301e7e&quot; alt=&quot;image.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;create-ec2&quot;&gt;Create EC2&lt;&#x2F;h1&gt;
&lt;p&gt;You will now create EC2 instances for the cluster. You are free to choose the configurations, but you should pay particular attention to the &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;setup&#x2F;production-environment&#x2F;tools&#x2F;kubeadm&#x2F;install-kubeadm&#x2F;&quot;&gt;instance type&lt;&#x2F;a&gt; and networking settings. In my case, I selected a t2.xlarge instance for the master and t2.large instances for the workers. For network settings, choose a public subnet to enable SSH access to the instance, and apply the security group you previously configured.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;4c64596b-9b9d-43b8-b773-680dcb02e1e7&quot; alt=&quot;image.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;create-eip-elastic-ip&quot;&gt;Create EIP (Elastic IP)&lt;&#x2F;h1&gt;
&lt;p&gt;Since the instance does not have a public IP (though you can configure one using the auto-assign public IP function), you will need to associate an Elastic IP (EIP) with the instance. First, allocate 3 EIPs under EC2 &amp;gt; Network &amp;amp; Security &amp;gt; Elastic IPs. Once allocated, you can associate each EIP with an instance. Now, you will be able to connect to your EC2 instance.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;allocate-eip&quot;&gt;Allocate EIP&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;36e0a293-e023-4f06-a38e-6eb17a460870&quot; alt=&quot;image.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;associate-eip&quot;&gt;Associate EIP&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;6d12366a-ffdd-4eab-9f75-bd8358673395&quot; alt=&quot;image.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;install-cri-kubeadm-kubelet-and-kubectl&quot;&gt;Install CRI, kubeadm, kubelet and kubectl&lt;&#x2F;h1&gt;
&lt;p&gt;Once connected to the instances, it is time to install the Container Runtime Interface (CRI) and some packages for Kubernetes installation. Before that, you need to turn off the swap. Swap space is an extension of physical RAM and helps maintain system stability and performance by providing virtual memory &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;phoenixnap.com&#x2F;kb&#x2F;swap-space&quot;&gt;[2]&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;But why is turning off swap necessary?&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The debates about this are extremely interesting. So, I am going to share them.&lt;&#x2F;li&gt;
&lt;li&gt;First, we essentially need to turn off swap to utilize all Kubernetes functionalities appropriately, according to &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;kubernetes&#x2F;kubernetes&#x2F;issues&#x2F;53533&quot;&gt;this discussion&lt;&#x2F;a&gt;:&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Support for swap is non-trivial. Guaranteed pods should never require swap. Burstable pods should have their requests met without requiring swap. BestEffort pods have no guarantee. The kubelet right now lacks the smarts to provide the right amount of predictable behavior here across pods.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;However, there is an interesting official post from &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;kubernetes.io&#x2F;blog&#x2F;2023&#x2F;08&#x2F;24&#x2F;swap-linux-beta&#x2F;&quot;&gt;Kubernetes&lt;&#x2F;a&gt;. You can now use the beta version of support for using swap on Linux! Quite interesting, right? You can read the articles I embedded:&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;p&gt;This was due to the inherent difficulty in guaranteeing and accounting for pod memory utilization when swap memory was involved. As a result, swap support was deemed out of scope in the initial design of Kubernetes, and the default behavior of a kubelet was to fail to start if swap memory was detected on a node.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Swap in Kubernetes has numerous use cases for a wide range of users. As a result, the Node Special Interest Group within the Kubernetes project has invested significant effort into supporting swap on Linux nodes for beta. Compared to the alpha, the kubelet&#x27;s support for running with swap enabled is more stable and robust, more user-friendly, and addresses many known shortcomings. This graduation to beta represents a crucial step towards achieving the goal of fully supporting swap in Kubernetes.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;swap-off-and-set-the-host-name-optional&quot;&gt;Swap off and Set the host name (optional)&lt;&#x2F;h2&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#6c7079;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; sudo swapoff&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt; -a
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; sudo vim &#x2F;etc&#x2F;hosts
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; sudo hostnamectl set-hostname control-plane
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; sudo hostnamectl set-hostname worker1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; sudo hostnamectl set-hostname worker2
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;update-etc-hosts-file&quot;&gt;Update &#x2F;etc&#x2F;hosts file&lt;&#x2F;h2&gt;
&lt;p&gt;After naming each host, update the &lt;code&gt;&#x2F;etc&#x2F;hosts&lt;&#x2F;code&gt; file on each node with their IP addresses and corresponding host names. This ensures that every host in the network can recognize each other by their new host names. You may also need to configure your VPC by enabling DNS hostnames.&lt;&#x2F;p&gt;
&lt;p&gt;Then, exit the terminal and reconnect to the instances to see that the host names have been changed.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#6c7079;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; sudo vim &#x2F;etc&#x2F;hosts
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;install-containerd&quot;&gt;Install containerd&lt;&#x2F;h2&gt;
&lt;p&gt;In this step, you will install containerd as the Container Runtime Interface (CRI). I used a script from &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;mrmaheshrajput.medium.com&#x2F;deploy-kubernetes-cluster-on-aws-ec2-instances-f3eeca9e95f1&quot;&gt;this post&lt;&#x2F;a&gt;, which you can also refer to. I uploaded the script to the instances and executed it; it worked for me. &lt;&#x2F;p&gt;
&lt;p&gt;The script performs several critical setup tasks: it loads necessary kernel modules, configures system settings for network traffic management, updates the package list, installs containerd, generates a default configuration for containerd, and restarts the service to apply all changes.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#6c7079;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;font-style:italic;color:#5f697a;&quot;&gt;# you can utilize the installation script here
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; vim .&#x2F;containerd-install.sh
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; chmod u+x .&#x2F;containerd-install.sh
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; .&#x2F;containerd-install.sh
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; service containerd status
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;installation-script&quot;&gt;Installation Script&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#6c7079;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#5ebfcc;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Make script executable using chmod u+x FILE_NAME.sh&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5ebfcc;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Containerd installation script&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5ebfcc;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Instructions from https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;setup&#x2F;production-environment&#x2F;container-runtimes&#x2F;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5ebfcc;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Creating containerd configuration file with list of necessary modules that need to be loaded with containerd&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;cat &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;&amp;lt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;EOF &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; tee &#x2F;etc&#x2F;modules-load.d&#x2F;k8s.conf
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;overlay
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;br_netfilter
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;EOF
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5ebfcc;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Load containerd modules&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; modprobe overlay
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; modprobe br_netfilter
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5ebfcc;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Creates configuration file for kubernetes-cri file (changed to k8s.conf)&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5f697a;&quot;&gt;# sysctl params required by setup, params persist across reboots
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;cat &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;&amp;lt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;EOF &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; tee &#x2F;etc&#x2F;sysctl.d&#x2F;k8s.conf
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;net.bridge.bridge-nf-call-iptables  = 1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;net.bridge.bridge-nf-call-ip6tables = 1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;net.ipv4.ip_forward                 = 1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;EOF
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5ebfcc;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Applying sysctl params&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; sysctl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt; --system
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5ebfcc;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Verify that the br_netfilter, overlay modules are loaded by running the following commands:&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;lsmod &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;grep&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; br_netfilter
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;lsmod &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;grep&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; overlay
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5ebfcc;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Verify that the net.bridge.bridge-nf-call-iptables, net.bridge.bridge-nf-call-ip6tables, and net.ipv4.ip_forward system variables are set to 1 in your sysctl config by running the following command:&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;sysctl&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; net.bridge.bridge-nf-call-iptables net.bridge.bridge-nf-call-ip6tables net.ipv4.ip_forward
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5ebfcc;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Update packages list&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; apt-get update
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5ebfcc;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Install containerd&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; apt-get&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt; -y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; install containerd
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5ebfcc;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Create a default config file at default location&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; mkdir&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt; -p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &#x2F;etc&#x2F;containerd
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; containerd config default &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; tee &#x2F;etc&#x2F;containerd&#x2F;config.toml
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5ebfcc;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Restarting containerd&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; systemctl restart containerd
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;You should also modify containerd’s configuration file as shown below (then you should restart the service):&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#6c7079;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;font-style:italic;color:#5f697a;&quot;&gt;# change configiration file (&#x2F;etc&#x2F;containerd&#x2F;config.toml)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;[plugins.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;io.containerd.grpc.v1.cri&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;.containerd.runtimes.runc]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;…
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;[plugins.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;io.containerd.grpc.v1.cri&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;.containerd.runtimes.runc.options]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;SystemdCgroup&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; = true
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;1f1647e2-bc81-481c-9836-34beb5217f3a&quot; alt=&quot;image.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;install-kubeadm-kubelet-and-kubectl&quot;&gt;&lt;strong&gt;Install kubeadm, kubelet and kubectl&lt;&#x2F;strong&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Now, install kubeadm, kubelet, and kubectl using the script from &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;mrmaheshrajput.medium.com&#x2F;deploy-kubernetes-cluster-on-aws-ec2-instances-f3eeca9e95f1&quot;&gt;this post&lt;&#x2F;a&gt;. The script updates the package list, establishes a new Kubernetes software repository, and installs the latest versions of kubeadm, kubelet, and kubectl. It also fixes these packages at their current versions to prevent automatic updates.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#6c7079;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; vim .&#x2F;kube-install.sh
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; chmod u+x .&#x2F;kube-install.sh
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; .&#x2F;kube-install.sh
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; kubeadm version
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; service kubelet status
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;installation-script-1&quot;&gt;Installation Script&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#6c7079;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#5ebfcc;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Make script executable using chmod u+x FILE_NAME.sh&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; apt-get update
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5f697a;&quot;&gt;# apt-transport-https may be a dummy package; if so, you can skip that package
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; apt-get install&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt; -y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; apt-transport-https ca-certificates curl gpg
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;curl -fsSL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; https:&#x2F;&#x2F;pkgs.k8s.io&#x2F;core:&#x2F;stable:&#x2F;v1.29&#x2F;deb&#x2F;Release.key &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; gpg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt; --dearmor -o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &#x2F;etc&#x2F;apt&#x2F;keyrings&#x2F;kubernetes-apt-keyring.gpg
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5ebfcc;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;#39;deb [signed-by=&#x2F;etc&#x2F;apt&#x2F;keyrings&#x2F;kubernetes-apt-keyring.gpg] https:&#x2F;&#x2F;pkgs.k8s.io&#x2F;core:&#x2F;stable:&#x2F;v1.29&#x2F;deb&#x2F; &#x2F;&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; tee &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;kubernetes.list
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; apt-get update
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5ebfcc;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Installing latest versions&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; apt-get install&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt; -y&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; kubelet kubeadm kubectl
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5ebfcc;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Fixate version to prevent upgrades&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;sudo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; apt-mark hold kubelet kubeadm kubectl
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;initialize-cluster&quot;&gt;Initialize Cluster&lt;&#x2F;h1&gt;
&lt;p&gt;Here, you will initialize the cluster using the kubeadm command. Before that, you need to set IPADDR, which is your current IP address, to be used as --apiserver-advertise-address, and also set POD_CIDR. Since these two are on the same network level, their subnets should not overlap. In the case of Calico, the default CIDR is 192.168.0.0&#x2F;16; that’s why I chose this range for POD_CIDR and another range for the VPC.&lt;&#x2F;p&gt;
&lt;p&gt;After initialization, you should copy your kubeconfig and set the privileges appropriately using the commands below. Alternatively, you can use the commands with sudo. Be sure to retain the join command, which allows worker nodes to join your cluster.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;init-kubeadm&quot;&gt;Init Kubeadm&lt;&#x2F;h2&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#6c7079;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; IPADDR=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;172.16.2.84&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; POD_CIDR=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;192.168.0.0&#x2F;16&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; sudo kubeadm init&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt; --apiserver-advertise-address&lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;IPADDR --pod-network-cidr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;POD_CIDR
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; mkdir&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt; -p &lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;HOME&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;&#x2F;.kube
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; sudo cp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt; -i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;HOME&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;&#x2F;.kube&#x2F;config
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; sudo chown $(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;id -u&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;):$(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;id -g&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;) $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;HOME&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;&#x2F;.kube&#x2F;config
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5f697a;&quot;&gt;# you can use it when join worker nodes
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; kubeadm join 172.16.2.84:6443&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt; --token &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;token&lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;	--discovery-token-ca-cert-hash &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;cert-hash&lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;install-calico-as-cni-plugin&quot;&gt;Install Calico as CNI plugin&lt;&#x2F;h1&gt;
&lt;p&gt;Now it is time to install a CNI (Container Network Interface) plugin. So far, you might find that the master node is in a &#x27;not ready&#x27; status, and some pods, like core-dns, are not operational. This is because, without a network interface provided by a CNI, the pods cannot establish network connections necessary for their operations. A CNI plugin is essential for facilitating communication between pods across the cluster. It configures the network layer by assigning IP addresses to pods and managing the network routes so that pods can communicate with each other and with the external network.&lt;&#x2F;p&gt;
&lt;p&gt;You can download the calico.yaml file and apply it! However, make sure to remove the &#x27;NoSchedule&#x27; taint from the master’s configuration, so that Calico pods can be scheduled on the master node.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#6c7079;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; wget https:&#x2F;&#x2F;docs.projectcalico.org&#x2F;manifests&#x2F;calico.yaml
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; kubectl apply&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt; -f&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; calico.yaml
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5f697a;&quot;&gt;# find taint configuration
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; kubectl get nodes&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt; -o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;jsonpath=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;#39;{range .items[*]}{.metadata.name}{&amp;quot;\t&amp;quot;}{.spec.taints}{&amp;quot;\n&amp;quot;}{end}&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;result:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; control-plane	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;effect&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;NoSchedule&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;key&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;node-role.kubernetes.io&#x2F;control-plane&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#5f697a;&quot;&gt;# untaint so that calico pods can be scheduled on the master node
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; kubectl taint nodes control-plane node-role.kubernetes.io&#x2F;control-plane-
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;open-ports-in-sg-for-calico&quot;&gt;Open ports in SG for Calico&lt;&#x2F;h2&gt;
&lt;p&gt;Additionally, you must include a security group rule for the Calico port, which is TCP 179, for both master and worker nodes&lt;&#x2F;p&gt;
&lt;h1 id=&quot;joind-worker-nodes&quot;&gt;Joind Worker Nodes&lt;&#x2F;h1&gt;
&lt;p&gt;Now, all you need to do for the worker nodes is to execute the command &lt;code&gt;sudo kubeadm join&lt;&#x2F;code&gt; so that they can be recognized and utilized by the master node. After joining you can check their status with &lt;code&gt;kubectl&lt;&#x2F;code&gt; command in the master node.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#6c7079;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; sudo kubeadm join 172.16.2.84:6443&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt; --token &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;token&lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;	--discovery-token-ca-cert-hash &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;cert-hash&lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;d89c45be-4b2b-439e-84bb-a27333e57d94&quot; alt=&quot;image.png&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h1&gt;
&lt;p&gt;In this post, we walked through the detailed steps of setting up a Kubernetes cluster on AWS with EC2 instances for the master and worker nodes, utilizing Calico as the CNI plugin. I hope this post helps you understand the process and the importance of each step. If you have any questions or feedback, please feel free to reach out to me. Thank you for reading! 🚀&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>How to Validate That Your Docker Configuration is Secure Using the Go SDK</title>
        <published>2024-08-27T00:00:00+00:00</published>
        <updated>2024-08-27T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://g-song-i.github.io/posts/how-to-validate-docker-is-secure/"/>
        <id>https://g-song-i.github.io/posts/how-to-validate-docker-is-secure/</id>
        
        <content type="html" xml:base="https://g-song-i.github.io/posts/how-to-validate-docker-is-secure/">&lt;h1 id=&quot;overview&quot;&gt;Overview&lt;&#x2F;h1&gt;
&lt;p&gt;Today, I&#x27;ll discuss how to interact with Docker on your host using the Go SDK. The &#x27;go-docker&#x27; project by the Docker group was archived on March 11, 2024, and integrated into the Moby project. This change has modified how it is used.&lt;&#x2F;p&gt;
&lt;p&gt;Next, I will explain how to verify if your Docker environment is properly configured for production. I will reference the CIS benchmark and discuss how to maintain a secure environment in compliance with these standards.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;get-docker-s-configuration-from-a-docker-client&quot;&gt;Get Docker’s Configuration from a Docker Client&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;create-docker-client&quot;&gt;Create Docker Client&lt;&#x2F;h2&gt;
&lt;p&gt;To retrieve Docker’s configuration from the Docker daemon, you first need to create a Docker client. Creating a new Docker client with the following code is recommended for efficiency and reusability:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;go&quot; style=&quot;background-color:#2b303b;color:#6c7079;&quot; class=&quot;language-go &quot;&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;package &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;client
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;github.com&#x2F;docker&#x2F;docker&#x2F;client&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;context&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;log&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;type &lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;DockerClient &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;struct &lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Client &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;client&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;Client
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;func &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5cb3fa;&quot;&gt;NewDockerClient&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;() (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;DockerClient&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;error&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;) {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;cli&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;err &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;client&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;NewClientWithOpts&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;client&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;FromEnv&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;client&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;WithAPIVersionNegotiation&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;())
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;err &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;nil &lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;nil&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;err
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;&amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;DockerClient&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Client&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;cli&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;}, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;nil
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;create-middleware-function&quot;&gt;Create Middleware Function&lt;&#x2F;h2&gt;
&lt;p&gt;This process can be skipped as it merely replicates the original functionality. I created the middleware function for the SDK for convenience:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;go&quot; style=&quot;background-color:#2b303b;color:#6c7079;&quot; class=&quot;language-go &quot;&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;package &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;collector
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;context&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;agentless-for-docker-dev&#x2F;util&#x2F;client&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;github.com&#x2F;docker&#x2F;docker&#x2F;api&#x2F;types&#x2F;system&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;func &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5cb3fa;&quot;&gt;GetDetailedSystemInfo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;dockerClient &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;client&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;DockerClient&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;) (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;system&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;Info&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;error&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;) {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;info&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;err &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;dockerClient&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Client&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Info&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;context&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Background&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;())
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;err &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;nil &lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;system&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Info&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;{}, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;err
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;info&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;nil
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;run-it&quot;&gt;Run it!&lt;&#x2F;h2&gt;
&lt;p&gt;Now, you can run the code in your desired manner. In my case, I expose this code via the go-gin web framework and Swagger API docs, allowing you to simply click the “Execute” button to retrieve the data. The result provides comprehensive information about your Docker system.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;18f13d19-7271-4dd9-932d-13eefe592846&quot; alt=&quot;Swagger Docs&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;cis-benchmark&quot;&gt;CIS Benchmark&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;understanding-cis-benchmark&quot;&gt;Understanding CIS Benchmark&lt;&#x2F;h2&gt;
&lt;p&gt;Before starting the evaluation of the security benchmark, let&#x27;s explore what the CIS benchmark is and why it is important to adhere to it.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;cis-benchmark-1&quot;&gt;CIS Benchmark&lt;&#x2F;h3&gt;
&lt;p&gt;The CIS (Center for Internet Security) Benchmarks are consensus-based best practice standards for security configurations. They offer detailed guidelines for various platforms and systems to ensure secure configurations.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;why-is-it-important&quot;&gt;Why is it important?&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Enhanced Security:&lt;&#x2F;strong&gt; CIS Benchmarks provide technical controls to mitigate vulnerabilities and protect assets from cyber attacks.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Compliance:&lt;&#x2F;strong&gt; Adhering to CIS Benchmarks helps meet regulatory requirements aligned with standards such as HIPAA, PCI-DSS, and SOX.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Consistent Implementation:&lt;&#x2F;strong&gt; Following CIS Benchmarks enables organizations to implement consistent security policies and procedures, standardizing security across systems and ensuring uniform security levels.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;validate-if-your-docker-configuration-is-secure&quot;&gt;Validate if Your Docker Configuration is Secure&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;ensure-live-restore-is-enabled&quot;&gt;&lt;strong&gt;Ensure live restore is enabled&lt;&#x2F;strong&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;One critical aspect of the CIS Docker Benchmark is “&lt;strong&gt;2.15 Ensure live restore is enabled&lt;&#x2F;strong&gt;.” Here’s a quote from the CIS Benchmark explaining its importance:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;The &lt;code&gt;--live-restore&lt;&#x2F;code&gt; option enables full support of daemon-less containers within Docker. It ensures that Docker does not stop containers on shutdown or restore and that it properly reconnects to the container when restarted.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Then, how can we get this one? According to the CIS Benchmark, we can check this configuration through docker command like &lt;code&gt;docker info --format &#x27;{{ .LiveRestoreEnabled }}&#x27;&lt;&#x2F;code&gt;  or simple use ps command like &lt;code&gt;ps -ef | grep dockerd&lt;&#x2F;code&gt; .&lt;&#x2F;p&gt;
&lt;p&gt;But we want this to be programmatic, right?&lt;&#x2F;p&gt;
&lt;p&gt;To do that, you can use the function we wrote above. The code looks like this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;go&quot; style=&quot;background-color:#2b303b;color:#6c7079;&quot; class=&quot;language-go &quot;&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;package &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;evaluator
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;fmt&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;agentless-for-docker-dev&#x2F;pkg&#x2F;evaluator&#x2F;types&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;agentless-for-docker-dev&#x2F;util&#x2F;client&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;agentless-for-docker-dev&#x2F;pkg&#x2F;collector&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;TargetConfiguration            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;LiveRestoreEnabled&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;DesiredLiveRestoreEnabledState &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;true&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;DefaultLiveRestoreEnabledState &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;false&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;func &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5cb3fa;&quot;&gt;EvaluateLiveRestoreEnabled&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;dockerClient &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;client&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;DockerClient&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;) (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;types&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;AuditResult&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;error&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;) {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;systemInfo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;err &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;collector&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;GetDetailedSystemInfo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;dockerClient&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;err &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;nil &lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;types&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;NewAuditResult&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Failed to retrieve system info&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;nil&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;), &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;err
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;constMap &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;map&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;DesiredLiveRestoreEnabledState&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;DesiredLiveRestoreEnabledState&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;DefaultLiveRestoreEnabledState&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;DefaultLiveRestoreEnabledState&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;TargetConfiguration&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;:            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;TargetConfiguration&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;actualState &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;fmt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Sprintf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;%v&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;systemInfo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;LiveRestoreEnabled&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;auditResult &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;FAIL&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;actualState &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;DesiredLiveRestoreEnabledState &lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;auditResult &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;PASS&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;auditMessage &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;fmt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Sprintf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt; is set to &lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;TargetConfiguration&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;actualState&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;types&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;NewAuditResult&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;auditResult&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;auditMessage&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;constMap&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    ), &lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;nil
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;run-it-1&quot;&gt;Run it!&lt;&#x2F;h2&gt;
&lt;p&gt;Execute the code using go-gin and Swagger for API documentation. You can then determine if your Docker configuration meets the CIS Benchmark standards.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;github.com&#x2F;user-attachments&#x2F;assets&#x2F;792a4d53-f0b2-4f29-bd19-1c9538fe071c&quot; alt=&quot;Swagger Docs&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h1&gt;
&lt;p&gt;This post demonstrated how to interact with Docker using the Go SDK, specifically focusing on secure configuration practices as outlined by the CIS benchmark. By programmatically assessing and validating Docker security settings, this approach serves as a foundational method for implementing &lt;strong&gt;Cloud Security Posture Management&lt;&#x2F;strong&gt; (CSPM). It ensures compliance with regulatory standards such as HIPAA, PCI-DSS, and SOX, while standardizing security practices across all cloud and container environments. Such proactive security measures are crucial for maintaining integrity and security in today’s complex cloud landscapes, ensuring that environments are not only compliant but resilient against potential threats.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Trade-off between Code Abstraction and Performance</title>
        <published>2024-07-10T00:00:00+00:00</published>
        <updated>2024-07-10T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://g-song-i.github.io/posts/trade-off-between-code-abstraction-and-performance/"/>
        <id>https://g-song-i.github.io/posts/trade-off-between-code-abstraction-and-performance/</id>
        
        <content type="html" xml:base="https://g-song-i.github.io/posts/trade-off-between-code-abstraction-and-performance/">&lt;h1 id=&quot;before-reading&quot;&gt;Before Reading…&lt;&#x2F;h1&gt;
&lt;p&gt;When I was in graduate school, I didn’t really need to code in a “well-structured” manner. What I needed was to implement code to prove that my academic theories worked. So, I had an idea of “how to code,” but it definitely differed from “how to code well.”&lt;&#x2F;p&gt;
&lt;p&gt;Now, I am working as a research engineer in a company. This role still does not require me to code “well,” but I want to ensure my work is presentable and shareable with the development department. In this post, I will share the challenges I have encountered while coding.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;chaotic-situation&quot;&gt;Chaotic Situation&lt;&#x2F;h1&gt;
&lt;p&gt;While developing a proof of concept (PoC) code, I encountered a quite chaotic situation. I wrote the code in Go, with two primary components: the &lt;strong&gt;collector&lt;&#x2F;strong&gt; and the &lt;strong&gt;evaluator&lt;&#x2F;strong&gt;. The objectives are:
- &lt;strong&gt;Collector&lt;&#x2F;strong&gt;: To fetch cloud configurations from a Cloud Service Provider (CSP) using an Open API.
- &lt;strong&gt;Evaluator&lt;&#x2F;strong&gt;: To assess these configurations to determine their security.
Below is a portion of my project structure:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#6c7079;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; tree
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5ebfcc;&quot;&gt;.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;├──&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; config.yaml
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;├──&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; docs
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;├──&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; main.go
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;├──&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; Makefile
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;├──&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; pkg
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;   ├── audit
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;   │   ├── firewall
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;   │   │   ├── common.go
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;   │   │   ├── common_test.go
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;   │   │   └── types.go
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;   │   ├── security_group
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;   │   │   ├── common.go
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;   │   │   ├── SCP_VPC_002.go
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;   │   │   ├── SCP_VPC_003.go
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;   │   │   ├── SCP_VPC_004.go
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;   │   │   ├── SCP_VPC_005.go
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;   │   │   └── types.go
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;   ├── auth
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;   │   └── create_request.go
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;   ├── config
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;   │   └── config.go
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;   └── util
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;       └── httpclient
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;│&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;           └── httpclient.go
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;├──&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; scp-cspm &#x2F;&#x2F; binary
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Each directory contains a &lt;code&gt;common.go&lt;&#x2F;code&gt;, which defines common functions used by the evaluator, and &lt;code&gt;types.go&lt;&#x2F;code&gt;, which is utilized when receiving responses from the CSP. Other components mainly belong to the evaluator.&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;
&lt;p&gt;Here is an example from &lt;code&gt;security_group&#x2F;common.go&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;go&quot; style=&quot;background-color:#2b303b;color:#6c7079;&quot; class=&quot;language-go &quot;&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;package &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;file_storage
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;mypath&#x2F;pkg&#x2F;config&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;mypath&#x2F;pkg&#x2F;util&#x2F;httpclient&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;func &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5cb3fa;&quot;&gt;listFileStorage&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;projectId &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;) (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;ListResponseFileStoragesResponse&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;error&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;) {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;fullURL &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;URLsConfig&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;PREFIX&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;URLsConfig&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;FILESTORAGE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;httpclient&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;SendRequest&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;ListResponseFileStoragesResponse&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;](&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;GET&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;fullURL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;AppConfig&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;AccessKey&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;AppConfig&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;AccessSecretKey&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;projectId&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;AppConfig&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;HeaderClientType&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;func &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5cb3fa;&quot;&gt;getFileStorageDetail&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;projectId&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;fileStorageId &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;) (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;FileStorageDetailResponseV3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;error&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;) {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;fullURL &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;URLsConfig&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;PREFIX&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;URLsConfig&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;FILESTORAGE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;&#x2F;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;fileStorageId
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;httpclient&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;SendRequest&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;FileStorageDetailResponseV3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;](&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;GET&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;fullURL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;AppConfig&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;AccessKey&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;AppConfig&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;AccessSecretKey&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;projectId&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;AppConfig&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;HeaderClientType&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Funtionalities of this code:
&lt;ul&gt;
&lt;li&gt;It calls &lt;code&gt;SendRequest&lt;&#x2F;code&gt; with a specified type from &lt;code&gt;types.go&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;It processes the response and returns it.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Characteristics of this code:
&lt;ul&gt;
&lt;li&gt;It is an internal function, as indicated by the lowercase first letter of the function name.&lt;&#x2F;li&gt;
&lt;li&gt;It uses &lt;code&gt;config&lt;&#x2F;code&gt;, which may &lt;strong&gt;not seem directly related to this function&#x27;s primary operations&lt;&#x2F;strong&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Although I was initially uncomfortable using &lt;code&gt;config&lt;&#x2F;code&gt; in this function, as it seemed indirectly related to the function’s core duties, the fact that four evaluators are already using this function led me to continue its use.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;testing-operation-more-chaotic&quot;&gt;Testing Operation: More Chaotic&lt;&#x2F;h1&gt;
&lt;p&gt;After this, I integrated the Go-Gin framework into the project to create RESTful APIs and expose API documentation to the development team. Given the increased complexity of the project structure, it became necessary to create test code for each function.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Consequently, I added a new &lt;code&gt;common.go&lt;&#x2F;code&gt; under the firewall directory:&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;go&quot; style=&quot;background-color:#2b303b;color:#6c7079;&quot; class=&quot;language-go &quot;&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;func &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5cb3fa;&quot;&gt;listFirewall&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;projectId &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;) (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;ListResponseFirewallListItemResponse&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;error&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;) {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;fullURL &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;URLsConfig&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;PREFIX&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;URLsConfig&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;FILESTORAGE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;httpclient&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;SendRequest&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;ListResponseFirewallListItemResponse&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;](&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;GET&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;fullURL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;AppConfig&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;AccessKey&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;AppConfig&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;AccessSecretKey&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;projectId&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;AppConfig&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;HeaderClientType&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;However, when I tried to test it, I encountered an error because I could not initialize the &lt;code&gt;config()&lt;&#x2F;code&gt; function during local tests; it does not support this since &lt;code&gt;config&lt;&#x2F;code&gt; locates the executable path and imports &lt;code&gt;config.yaml&lt;&#x2F;code&gt; from that position. I considered rewriting &lt;code&gt;config&lt;&#x2F;code&gt; to use a relative path, but I realized that would not address the core problem.&lt;&#x2F;li&gt;
&lt;li&gt;To resolve this, I modified the code as follows:&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;go&quot; style=&quot;background-color:#2b303b;color:#6c7079;&quot; class=&quot;language-go &quot;&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;func &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5cb3fa;&quot;&gt;listFirewall&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;projectId &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;fullURL &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;accessKey &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;accessSecretKey &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;headerClientType &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;) (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;ListResponseFirewallListItemResponse&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;error&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;) {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;httpclient&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;SendRequest&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;ListResponseFirewallListItemResponse&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;](&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;GET&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;fullURL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;accessKey&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;accessSecretKey&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;projectId&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;headerClientType&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;I also created common_test.go to include the test code:&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;pre data-lang=&quot;go&quot; style=&quot;background-color:#2b303b;color:#6c7079;&quot; class=&quot;language-go &quot;&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;func &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5cb3fa;&quot;&gt;TestListFirewall&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;testing&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;T&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;) {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;projectID &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;fullURL &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;accessKey &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;accessSecretKey &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;headerClientType &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;OpenApi&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;response&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;err &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;listFirewall&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;projectID&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;fullURL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;accessKey&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;accessSecretKey&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;headerClientType&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;err &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;nil &lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Errorf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Failed to list firewall: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;%v&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;err&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;fmt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Println&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;response&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This modification successfully resolved the issue.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;isn-t-it-too-abstract&quot;&gt;Isn’t it too abstract?&lt;&#x2F;h2&gt;
&lt;p&gt;Okay, now I&#x27;ve resolved the problem. But have I really addressed the root issue? Let me summarize the current situation:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Common functions, such as &lt;code&gt;listFirewall&lt;&#x2F;code&gt;, merely act as bridges between callers and evaluators.&lt;&#x2F;li&gt;
&lt;li&gt;They do not directly use &lt;code&gt;config&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;They are internal functions and can only be called from evaluators when needed.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;This setup seems simple, but is it appropriately abstract or efficient? I find myself facing new complexities.&lt;&#x2F;p&gt;
&lt;p&gt;I tried this to test performance of two functions:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#6c7079;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;for&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;{1..10}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;do &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;curl -X &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;#39;GET&amp;#39; &amp;#39;http:&#x2F;&#x2F;172.16.0.120:10902&#x2F;Firewall&#x2F;test-01&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt; -H &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;#39;accept: application&#x2F;json&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;sleep&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; 1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;(I &amp;quot;planned to upload testing result as images&amp;quot;, but I was too lazy, sorry 🤣)&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Performance:
&lt;ul&gt;
&lt;li&gt;With an abstraction layer: approximately 400ms overall&lt;&#x2F;li&gt;
&lt;li&gt;Directly sending requests: approximately 325ms overall&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Of course, the difference isn&#x27;t significant, as it&#x27;s just a small abstraction layer in action. Also, I can&#x27;t be entirely sure about the constant responsiveness of the CSP’s server, but I wanted to run this test anyway. It was more about satisfying my curiosity and seeing the practical impact of the abstraction, rather than expecting major discrepancies. Testing like this helps me understand the overhead introduced by additional layers in our architecture, even if minimal. It’s an essential part of optimizing and ensuring that we’re making informed decisions when it comes to the balance between code maintainability and system performance.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;how-to-decide-to-abstract-or-not-to-abstract&quot;&gt;How to decide to abstract or not to abstract?&lt;&#x2F;h1&gt;
&lt;p&gt;Here, I summarize some points, which can be discussed when you decide whether to abstract the code or not. I read articles and papers, then discuss them with GPT. 🙂 Hope it will be fun&lt;&#x2F;p&gt;
&lt;h2 id=&quot;reusability&quot;&gt;Reusability&lt;&#x2F;h2&gt;
&lt;p&gt;Reusability is paramount in software development as it significantly reduces the time and effort required to develop and maintain code. By designing modules and components that can be reused in different parts of the application or even in different projects, developers can ensure consistency, reduce errors, and accelerate development cycles. Effective reusability promotes a DRY (Don&#x27;t Repeat Yourself) approach and can lead to more efficient, cleaner code.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;complexity&quot;&gt;Complexity&lt;&#x2F;h2&gt;
&lt;p&gt;Managing complexity effectively is crucial for maintaining the readability and maintainability of the codebase. Complexity can arise from various factors, such as intricate control flow, high inter-module dependencies, or simply from trying to incorporate too many features at once. Simplifying complex systems through well-thought-out design patterns, clear documentation, and modular architecture can help in minimizing the cognitive load on developers and maintaining the system more manageable over time.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;testability&quot;&gt;Testability&lt;&#x2F;h2&gt;
&lt;p&gt;Testability is a measure of how easily a software system can be tested. This is crucial for ensuring long-term reliability and ease of changes. Highly testable systems are modular, have clear boundaries, and minimal dependencies, which allow for more straightforward unit testing. Investing in testability leads to software that is less prone to bugs and easier to update and expand without introducing errors.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;scalability&quot;&gt;Scalability&lt;&#x2F;h2&gt;
&lt;p&gt;Scalability must be considered to accommodate growth in user demand, data volume, and computational intensity without compromising performance. Designing systems that can scale effectively involves considerations of load balancing, resource management, and the ability to upgrade or expand components without significant disruptions. Scalability ensures that the software continues to perform optimally as it grows and adapts to increased operational demands.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;results&quot;&gt;Results?&lt;&#x2F;h1&gt;
&lt;p&gt;Finally, I decided to abstract my code for the following reasons:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;My code is primarily for a &lt;strong&gt;Proof of Concept (PoC)&lt;&#x2F;strong&gt;, so &lt;strong&gt;it does not currently need to scale significantly&lt;&#x2F;strong&gt;. The current level of abstraction should suffice.&lt;&#x2F;li&gt;
&lt;li&gt;However, since the development team will review my code, &lt;strong&gt;clarity is crucial.&lt;&#x2F;strong&gt; Clear, well-abstracted code facilitates easier understanding and maintenance.&lt;&#x2F;li&gt;
&lt;li&gt;Some interface code, such as authentication, making requests, and common functions, may be reused by the development team. This &lt;strong&gt;reusability&lt;&#x2F;strong&gt; underscores the need for clarity.&lt;&#x2F;li&gt;
&lt;li&gt;The code must be &lt;strong&gt;easy to test&lt;&#x2F;strong&gt; whenever new functions are introduced, ensuring reliability and ease of maintenance.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Through this exploration, I found the process of optimizing and abstracting code to be quite engaging. It provided a valuable opportunity to reconsider best practices in coding within the context of a real-world application.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>How to manage your kubernetes cluster 01: Rancher</title>
        <published>2024-07-04T00:00:00+00:00</published>
        <updated>2024-07-04T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://g-song-i.github.io/posts/how-to-manage-your-kubernetes-01-rancher/"/>
        <id>https://g-song-i.github.io/posts/how-to-manage-your-kubernetes-01-rancher/</id>
        
        <content type="html" xml:base="https://g-song-i.github.io/posts/how-to-manage-your-kubernetes-01-rancher/">&lt;h1 id=&quot;table-of-contents&quot;&gt;Table of Contents&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;g-song-i.github.io&#x2F;posts&#x2F;how-to-manage-your-kubernetes-01-rancher&#x2F;#overview&quot;&gt;Overview&lt;&#x2F;a&gt; &lt;br&#x2F;&gt;
        &lt;a href=&quot;https:&#x2F;&#x2F;g-song-i.github.io&#x2F;posts&#x2F;how-to-manage-your-kubernetes-01-rancher&#x2F;#install-rancher-with-docker&quot;&gt;Install Rancher with Docker&lt;&#x2F;a&gt; &lt;br&#x2F;&gt;
        &lt;a href=&quot;https:&#x2F;&#x2F;g-song-i.github.io&#x2F;posts&#x2F;how-to-manage-your-kubernetes-01-rancher&#x2F;#dive-into-rancher&quot;&gt;Dive into Rancher&lt;&#x2F;a&gt; &lt;br&#x2F;&gt;
            &lt;a href=&quot;https:&#x2F;&#x2F;g-song-i.github.io&#x2F;posts&#x2F;how-to-manage-your-kubernetes-01-rancher&#x2F;#login&quot;&gt;Login&lt;&#x2F;a&gt; &lt;br&#x2F;&gt;
            &lt;a href=&quot;https:&#x2F;&#x2F;g-song-i.github.io&#x2F;posts&#x2F;how-to-manage-your-kubernetes-01-rancher&#x2F;#importing-your-existing-cluster&quot;&gt;Importing your existing cluster&lt;&#x2F;a&gt; &lt;br&#x2F;&gt;
            &lt;a href=&quot;https:&#x2F;&#x2F;g-song-i.github.io&#x2F;posts&#x2F;how-to-manage-your-kubernetes-01-rancher&#x2F;#explore-dashboard&quot;&gt;Explore Dashboard&lt;&#x2F;a&gt; &lt;br&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;g-song-i.github.io&#x2F;posts&#x2F;how-to-manage-your-kubernetes-01-rancher&#x2F;#more&quot;&gt;More...&lt;&#x2F;a&gt; &lt;br&#x2F;&gt;
        &lt;a href=&quot;https:&#x2F;&#x2F;g-song-i.github.io&#x2F;posts&#x2F;how-to-manage-your-kubernetes-01-rancher&#x2F;#logging-in-rancher&quot;&gt;Logging in Rancher&lt;&#x2F;a&gt; &lt;br&#x2F;&gt;
        &lt;a href=&quot;https:&#x2F;&#x2F;g-song-i.github.io&#x2F;posts&#x2F;how-to-manage-your-kubernetes-01-rancher&#x2F;#setting-up-alerts&quot;&gt;Setting Up Alerts&lt;&#x2F;a&gt; &lt;br&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;g-song-i.github.io&#x2F;posts&#x2F;how-to-manage-your-kubernetes-01-rancher&#x2F;#when-is-using-rancher-a-good-choice&quot;&gt;When Is Using Rancher a Good Choice?&lt;&#x2F;a&gt; &lt;br&#x2F;&gt;
        &lt;a href=&quot;https:&#x2F;&#x2F;g-song-i.github.io&#x2F;posts&#x2F;how-to-manage-your-kubernetes-01-rancher&#x2F;#user-friendliness-for-non-terminal-users&quot;&gt;User-Friendliness for Non-Terminal Users&lt;&#x2F;a&gt; &lt;br&#x2F;&gt;
        &lt;a href=&quot;https:&#x2F;&#x2F;g-song-i.github.io&#x2F;posts&#x2F;how-to-manage-your-kubernetes-01-rancher&#x2F;#comprehensive-management-from-a-single-pane&quot;&gt;Comprehensive Management from a Single Pane&lt;&#x2F;a&gt; &lt;br&#x2F;&gt;
        &lt;a href=&quot;https:&#x2F;&#x2F;g-song-i.github.io&#x2F;posts&#x2F;how-to-manage-your-kubernetes-01-rancher&#x2F;#extensive-catalog-of-applications&quot;&gt;Extensive Catalog of Applications&lt;&#x2F;a&gt; &lt;br&#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;overview&quot;&gt;Overview&lt;&#x2F;h1&gt;
&lt;p&gt;Do you want to manage your Kubernetes cluster? There are several ways to manage it such as using the kubectl CLI if you are familiar with the terminal interface, Rancher from SUSE if you prefer managing through a console, and k9s if you want a more stylish approach!&lt;&#x2F;p&gt;
&lt;p&gt;In this post, I will explain how to install Rancher for managing Kubernetes and discuss when it is a good choice.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;install-rancher-with-docker&quot;&gt;Install Rancher with Docker&lt;&#x2F;h2&gt;
&lt;p&gt;Note that this method of installation is just for testing and demonstration purposes as described at &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;ranchermanager.docs.rancher.com&#x2F;getting-started&#x2F;installation-and-upgrade#docker-install&quot;&gt;Rancher documentation&lt;&#x2F;a&gt;. You should choose another method if it is for production use.&lt;&#x2F;p&gt;
&lt;p&gt;Here I have a single docker-compose file to set up and tear down the Rancher container:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#6c7079;&quot;&gt;&lt;code&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;version: &amp;#39;3&amp;#39;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;services:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  rancher:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    image: rancher&#x2F;rancher:v2.8-head
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    container_name: rancher_test
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    restart: always
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    ports:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    - &amp;quot;80:80&#x2F;tcp&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    - &amp;quot;443:443&#x2F;tcp&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    volumes:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    - &amp;quot;.&#x2F;rancher-data:&#x2F;var&#x2F;lib&#x2F;rancher&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    environment:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    - CATTLE_BOOTSTRAP_PASSWORD=1234
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    privileged: true
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now you just need to run the command (you might need &amp;quot;sudo&amp;quot; privileges):&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#2b303b;color:#6c7079;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; docker-compose up
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Creating&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; network &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;rancher_default&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; with the default driver
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Pulling&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; rancher (rancher&#x2F;rancher:v2.8-head)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;...
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;v2.8-head:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; Pulling from rancher&#x2F;rancher
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;088fce18aff4:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; Pull complete
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;8c6a13d6a83e:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; Pull complete
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;378e6ec2cbbc:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt; Pull complete
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;...
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;dive-into-rancher&quot;&gt;Dive into Rancher&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;login&quot;&gt;Login&lt;&#x2F;h3&gt;
&lt;p&gt;Now you can access the website via &amp;quot;http&amp;quot;. Then you might see the login screen. Since we already defined the bootstrap password (CATTLE_BOOTSTRAP_PASSWORD) in the docker-compose file, enter &amp;quot;1234&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;github.com&#x2F;g-song-i&#x2F;g-song-i.github.io&#x2F;assets&#x2F;57793091&#x2F;7dd8709b-29d3-42a1-9185-a923d0cb5a37&quot; alt=&quot;RancherBootstrapLogin&quot; &#x2F;&gt; &lt;br&#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;importing-your-existing-cluster&quot;&gt;Importing your existing cluster&lt;&#x2F;h3&gt;
&lt;p&gt;Let&#x27;s import your existing cluster. To import the cluster into Rancher, you must have &amp;quot;cluster-admin&amp;quot; privileges. You can apply a clusterrolebinding as follows:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#6c7079;&quot;&gt;&lt;code&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;kubectl create clusterrolebinding cluster-admin-binding \
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  --clusterrole cluster-admin \
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;  --user [USER_ACCOUNT]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;You can check which account you are using with the command (user in context):&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#6c7079;&quot;&gt;&lt;code&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;kubectl config view --minify
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(or) kubectl config current-context
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now click &amp;quot;Import Existing&amp;quot;, 
&lt;img src=&quot;https:&#x2F;&#x2F;github.com&#x2F;g-song-i&#x2F;g-song-i.github.io&#x2F;assets&#x2F;57793091&#x2F;1f96795c-4e36-46ea-8f4c-2657949ddd59&quot; alt=&quot;ImportingClusterButton&quot; &#x2F;&gt; &lt;br&#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Write the cluster&#x27;s name, and press the create button. 
&lt;img src=&quot;https:&#x2F;&#x2F;github.com&#x2F;g-song-i&#x2F;g-song-i.github.io&#x2F;assets&#x2F;57793091&#x2F;14c6563b-29d4-4786-9649-3547f586adc1&quot; alt=&quot;CreateCluster&quot; &#x2F;&gt; &lt;br&#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Then you might see some command lines to apply Rancher&#x27;s YAML to create some pods for importing. I tried the first one &lt;code&gt;kubectl apply -f https:&#x2F;&#x2F;~.yaml&lt;&#x2F;code&gt;, but I encountered the message &lt;code&gt;Unable to connect to the server: tls: failed to verify certificate: x509: certificate signed by unknown authority&lt;&#x2F;code&gt;, I tried the second line &lt;code&gt;curl --insecure --sfL ... | kubectl apply -f -&lt;&#x2F;code&gt;, and it worked for me.&lt;&#x2F;p&gt;
&lt;p&gt;You can enter the command &lt;code&gt;kubectl get pods -A&lt;&#x2F;code&gt; just to see what pods are created for this work. &lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#2b303b;color:#6c7079;&quot;&gt;&lt;code&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;$ kubectl get pods -A
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;NAMESPACE       NAME                                       READY   STATUS              RESTARTS   AGE
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;cattle-system   cattle-cluster-agent-845554d4f8-qnksl      0&#x2F;1     ContainerCreating   0          12s
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;And now you can explore your cluster and their resources on the Rancher dashboard!
&lt;img src=&quot;https:&#x2F;&#x2F;github.com&#x2F;g-song-i&#x2F;g-song-i.github.io&#x2F;assets&#x2F;57793091&#x2F;6dc20e0f-03f3-4b68-8760-505c1957fbfe&quot; alt=&quot;dashborad&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;explore-dashboard&quot;&gt;Explore Dashboard&lt;&#x2F;h3&gt;
&lt;p&gt;From here, you can see useful cluster information to inspect and debug your cluster. Rancher&#x27;s dashboard offers a comprehensive overview of your cluster&#x27;s health, resource usage, and more. You can utilize the dashboard to manage workloads, configure network policies, and set up service discovery.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;more&quot;&gt;More...&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;logging-in-rancher&quot;&gt;Logging in Rancher&lt;&#x2F;h3&gt;
&lt;p&gt;Rancher enhances the management of Kubernetes clusters by providing comprehensive logging capabilities that are crucial for monitoring the health and activities within your cluster. Here’s a brief overview of the logging features in Rancher:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Centralized Logging&lt;&#x2F;li&gt;
&lt;li&gt;Integration with Multiple Logging Backends&lt;&#x2F;li&gt;
&lt;li&gt;Log Analysis and Troubleshooting&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;setting-up-alerts&quot;&gt;Setting Up Alerts&lt;&#x2F;h3&gt;
&lt;p&gt;Rancher allows you to set up &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;ranchermanager.docs.rancher.com&#x2F;v2.0-v2.4&#x2F;reference-guides&#x2F;rancher-project-tools&#x2F;project-alerts&quot;&gt;alerts&lt;&#x2F;a&gt; for various events within your cluster. This feature helps in proactive monitoring and can alert administrators about critical issues before they impact your operations. Setting up alerts involves specifying the conditions and thresholds that trigger notifications.&lt;&#x2F;p&gt;
&lt;p&gt;By integrating these features into your daily operations, you can maintain a robust, efficient, and secure Kubernetes environment, ensuring your applications run smoothly and reliably.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;when-is-using-rancher-a-good-choice&quot;&gt;When Is Using Rancher a Good Choice?&lt;&#x2F;h1&gt;
&lt;p&gt;While tools like kubectl and k9s offer powerful ways to interact with Kubernetes, each has its context where it excels. Rancher, in particular, stands out in several scenarios:&lt;&#x2F;p&gt;
&lt;h2 id=&quot;user-friendliness-for-non-terminal-users&quot;&gt;User-Friendliness for Non-Terminal Users&lt;&#x2F;h2&gt;
&lt;p&gt;One of the primary advantages of using Rancher is its user-friendly graphical interface. If you or your team are not familiar or comfortable with command-line interfaces, Rancher provides a more accessible entry point into managing Kubernetes. Its dashboard presents complex cluster information and operations in a visual format, making it easier to understand and manage without deep command-line expertise.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;comprehensive-management-from-a-single-pane&quot;&gt;Comprehensive Management from a Single Pane&lt;&#x2F;h2&gt;
&lt;p&gt;Rancher offers a centralized management pane for all Kubernetes clusters. This is particularly useful for organizations managing multiple clusters, possibly across different environments (cloud and on-prem). Instead of switching between different terminal windows or scripts, Rancher gives you a unified overview and control point for deploying, managing, and scaling applications across all your clusters.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;extensive-catalog-of-applications&quot;&gt;Extensive Catalog of Applications&lt;&#x2F;h2&gt;
&lt;p&gt;Rancher comes with a built-in catalog of Helm charts and other applications, which can be deployed with just a few clicks. This is particularly advantageous for teams looking to rapidly deploy and test new applications without going through the CLI-based setup of Helm or other package managers.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>The Way to Access to Google Workspace with Google Cloud’s Service Account</title>
        <published>2024-06-21T00:00:00+00:00</published>
        <updated>2024-06-21T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://g-song-i.github.io/posts/way-to-access-to-google-workspace-with-service-account/"/>
        <id>https://g-song-i.github.io/posts/way-to-access-to-google-workspace-with-service-account/</id>
        
        <content type="html" xml:base="https://g-song-i.github.io/posts/way-to-access-to-google-workspace-with-service-account/">&lt;h1 id=&quot;table-of-contents&quot;&gt;Table of contents&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;g-song-i.github.io&#x2F;posts&#x2F;way-to-access-to-google-workspace-with-service-account&#x2F;#overview&quot;&gt;Overview&lt;&#x2F;a&gt; &lt;br&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;g-song-i.github.io&#x2F;posts&#x2F;way-to-access-to-google-workspace-with-service-account&#x2F;#problem-statement&quot;&gt;Problem Statement&lt;&#x2F;a&gt; &lt;br&#x2F;&gt;
        &lt;a href=&quot;https:&#x2F;&#x2F;g-song-i.github.io&#x2F;posts&#x2F;way-to-access-to-google-workspace-with-service-account&#x2F;#error-message&quot;&gt;Error Message&lt;&#x2F;a&gt; &lt;br&#x2F;&gt;
        &lt;a href=&quot;https:&#x2F;&#x2F;g-song-i.github.io&#x2F;posts&#x2F;way-to-access-to-google-workspace-with-service-account&#x2F;#method-1-setting-the-quota-project&quot;&gt;Method 1: Setting the Quota Project&lt;&#x2F;a&gt; &lt;br&#x2F;&gt;
        &lt;a href=&quot;https:&#x2F;&#x2F;g-song-i.github.io&#x2F;posts&#x2F;way-to-access-to-google-workspace-with-service-account&#x2F;#method-2-impersonating-as-a-workspace-user-with-a-service-account&quot;&gt;Method 2: Impersonating as a Workspace User with a Service Account&lt;&#x2F;a&gt; &lt;br&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;g-song-i.github.io&#x2F;posts&#x2F;way-to-access-to-google-workspace-with-service-account&#x2F;#review&quot;&gt;REVIEW&lt;&#x2F;a&gt; &lt;br&#x2F;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;g-song-i.github.io&#x2F;posts&#x2F;way-to-access-to-google-workspace-with-service-account&#x2F;#ref&quot;&gt;REF&lt;&#x2F;a&gt; &lt;br&#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;overview&quot;&gt;Overview&lt;&#x2F;h1&gt;
&lt;p&gt;In this post, I will explain some challenges I encountered while implementing a function to access Google Workspace using Google Cloud’s Service Account. &lt;strong&gt;Although I&#x27;m not certain this is the correct way to access Google Workspace,&lt;&#x2F;strong&gt; my initial goal was to utilize a single service account with privileges to manage accounts as an administrator of an organization.&lt;&#x2F;p&gt;
&lt;p&gt;Before proceeding, ensure:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The project that includes the service account has the Google Admin SDK API activated.&lt;&#x2F;li&gt;
&lt;li&gt;The service account you intend to use to connect to Google Workspace is enabled with Domain-wide delegation.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;problem-statement&quot;&gt;Problem Statement&lt;&#x2F;h1&gt;
&lt;p&gt;While developing a prototype for Cloud Identity and Entitlements Management (CIEM) solutions for Google Cloud, &lt;strong&gt;I faced an issue listing workspace users with the Google Admin SDK API using a Google Cloud service account.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Here&#x27;s my initial code:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;go&quot; style=&quot;background-color:#2b303b;color:#6c7079;&quot; class=&quot;language-go &quot;&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;package &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;workspace
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;context&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;fmt&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;log&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;admin &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;google.golang.org&#x2F;api&#x2F;admin&#x2F;directory&#x2F;v1&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;google.golang.org&#x2F;api&#x2F;option&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;my-project&#x2F;auth&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;my-project&#x2F;config&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;func &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5cb3fa;&quot;&gt;GetWorkspaceUserList&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;() ([]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;admin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;User&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;error&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;) {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;ctx &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;context&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Background&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;credentialsPath &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;ServiceAccountFilePath
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;serviceInterface&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;err &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;auth&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;NewService&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;ctx&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;admin&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;option&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;WithHTTPClient&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Client&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;ctx&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;)))
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;err &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;nil &lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;nil&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;err
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;service&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;ok &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;serviceInterface&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;admin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;Service&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;ok &lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;			&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;nil&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;fmt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Errorf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;failed to convert service interface&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;users &lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;[]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;admin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;User
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;req &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;service&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Users&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;List&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;().&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Customer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;my_customer&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;MaxResults&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;500&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;OrderBy&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;email&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;err &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;req&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Pages&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;ctx&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;func&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;page &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;admin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;Users&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;error &lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;users &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5ebfcc;&quot;&gt;append&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;users&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;page&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Users&lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;...&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;nil
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	})
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;err &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;nil &lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Printf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Failed to list Workspace users: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;%v&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;err&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;nil&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;err
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;users&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;nil
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This configuration might be confusing:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;go&quot; style=&quot;background-color:#2b303b;color:#6c7079;&quot; class=&quot;language-go &quot;&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;req &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;service&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Users&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;List&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;().&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Customer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;my_customer&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;MaxResults&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;500&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;OrderBy&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;email&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;According to the Google Workspace’s documentation it refers to:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;The unique ID for the customer&#x27;s Google Workspace account. In case of a multi-domain account, to fetch all users for a customer, use this field instead of &lt;code&gt;domain&lt;&#x2F;code&gt;. You can also use the &lt;code&gt;my_customer&lt;&#x2F;code&gt; alias to represent your account&#x27;s &lt;code&gt;customerId&lt;&#x2F;code&gt;. The &lt;code&gt;customerId&lt;&#x2F;code&gt; is also returned as part of the &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;developers.google.com&#x2F;admin-sdk&#x2F;directory&#x2F;v1&#x2F;reference&#x2F;users&quot;&gt;Users&lt;&#x2F;a&gt; resource. You must provide either the &lt;code&gt;customer&lt;&#x2F;code&gt; or the &lt;code&gt;domain&lt;&#x2F;code&gt; parameter.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;error-message&quot;&gt;Error Message&lt;&#x2F;h2&gt;
&lt;p&gt;Anyway! Here is the error I encountered:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;go&quot; style=&quot;background-color:#2b303b;color:#6c7079;&quot; class=&quot;language-go &quot;&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Failed to list Workspace users&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;googleapi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Error &lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;403&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Your application is authenticating by using local Application Default Credentials&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;. &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;The admin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;googleapis&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;com API requires a quota project&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;which is not set by &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;default&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;. 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Details&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;[
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;@type&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;type.googleapis.com&#x2F;google.rpc.ErrorInfo&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;domain&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;googleapis.com&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;metadata&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;: {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;consumer&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;projects&#x2F;project-number&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;service&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;admin.googleapis.com&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;},
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;reason&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;SERVICE_DISABLED&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;ul&gt;
&lt;li&gt;Initially, I was confused because:
&lt;ul&gt;
&lt;li&gt;I was using a Service Account’s key file, which I thought did not utilize Application Default Credentials (ADC).&lt;&#x2F;li&gt;
&lt;li&gt;The project number listed in the error message’s “consumer” section wasn’t even part of my organization.&lt;&#x2F;li&gt;
&lt;li&gt;I had already activated the Admin SDK API for my project.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;method-1-setting-the-quota-project&quot;&gt;Method 1: Setting the Quota Project&lt;&#x2F;h2&gt;
&lt;p&gt;I attempted to configure a quota project when sending the request since the error message indicated, &amp;quot;The &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;http:&#x2F;&#x2F;admin.googleapis.com&#x2F;&quot;&gt;admin.googleapis.com&lt;&#x2F;a&gt; API requires a quota project, which is not set by default.&amp;quot; Here&#x27;s the revised code:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;go&quot; style=&quot;background-color:#2b303b;color:#6c7079;&quot; class=&quot;language-go &quot;&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;func &lt;&#x2F;span&gt;&lt;span style=&quot;color:#5cb3fa;&quot;&gt;ListAllWorkspaceUsers&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;error &lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;ctx &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;context&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Background&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;quotaProjectID &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;your-project-id&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;serviceInterface&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;err &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;auth&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;NewService&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;ctx&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;admin&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;option&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;WithQuotaProject&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;quotaProjectID&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;))
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;err &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;nil &lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Fatalf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Service creation failed: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;%v&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;err&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;err
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;service&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;ok &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;serviceInterface&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;admin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;Service&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;ok &lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Fatalf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Failed to convert service interface to admin service&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;fmt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Errorf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Failed to convert service interface&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;req &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;service&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Users&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;List&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;().&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Customer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;my_customer&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;MaxResults&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;500&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;).&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;OrderBy&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;email&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;err &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;req&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Pages&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;ctx&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;func&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;page &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;admin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;Users&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;error &lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;_&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;user &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;:= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;range &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;page&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Users &lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;fmt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Printf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;User: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;, Email: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;%s&lt;&#x2F;span&gt;&lt;span style=&quot;color:#5ebfcc;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;user&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;FullName&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;user&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;PrimaryEmail&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;        }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;nil
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    })
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;err &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;nil &lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Printf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;Failed to list Workspace users: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;%v&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;err&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;err
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;nil
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;And…. no way! it was failed 😕 the error message here:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;go&quot; style=&quot;background-color:#2b303b;color:#6c7079;&quot; class=&quot;language-go &quot;&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Failed to list Workspace users&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;googleapi&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Error &lt;&#x2F;span&gt;&lt;span style=&quot;color:#db9d63;&quot;&gt;403&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Not Authorized to access this resource&lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;api&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;forbidden
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;method-2-impersonating-as-a-workspace-user-with-a-service-account&quot;&gt;Method 2: Impersonating as a Workspace User with a Service Account&lt;&#x2F;h2&gt;
&lt;p&gt;After trying various authentication methods, I discovered &lt;a rel=&quot;noopener nofollow noreferrer&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;www.googlecloudcommunity.com&#x2F;gc&#x2F;Cloud-Hub&#x2F;Admin-SDK-API-Returning-Status-Code-403-Cannot-Figure-Out-Root&#x2F;m-p&#x2F;742710#M6830&quot;&gt;a helpful post&lt;&#x2F;a&gt; suggesting that to use the Admin SDK API effectively, the service account must impersonate an administrator of the domain; simply enabling domain-wide delegation was insufficient.&lt;&#x2F;p&gt;
&lt;p&gt;Okay, we will try. But note that, you should ensure,&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;The workspace user you attempt to impersonate is aware of this process.&lt;&#x2F;li&gt;
&lt;li&gt;Your Service Account has the &amp;quot;https:&#x2F;&#x2F;www.googleapis.com&#x2F;auth&#x2F;admin.directory.user.readonly&amp;quot; permission set in the Workspace Admin Console, indicating that the workspace administrator is aware of your activities.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;To implement this, configure your service account as follows:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;go&quot; style=&quot;background-color:#2b303b;color:#6c7079;&quot; class=&quot;language-go &quot;&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;config &lt;&#x2F;span&gt;&lt;span style=&quot;color:#adb7c9;&quot;&gt;:= &amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;jwt&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Email&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;:      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;cred&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#9acc76;&quot;&gt;&amp;quot;client_email&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;].(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;),
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;PrivateKey&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;: []&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;byte&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;privateKey&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;),
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;TokenURL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;:   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;google&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;JWTTokenURL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Scopes&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;:     []&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cd74e8;&quot;&gt;string&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;admin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;AdminDirectoryUserReadonlyScope&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;},
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;Subject&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;:    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;config&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#eb6772;&quot;&gt;AdminEmail&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#abb2bf;&quot;&gt;    }
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;In my code, config library works getting global configuration for the code. So it gets admin email, which you impersonate. Otherwise, cred and privateKey are from the Service Account’s key fie. Other process are same to before. &lt;&#x2F;p&gt;
&lt;p&gt;And… IT FINALLY SUCCEEDED! 😂&lt;&#x2F;p&gt;
&lt;h1 id=&quot;review&quot;&gt;REVIEW&lt;&#x2F;h1&gt;
&lt;p&gt;I believe this method succeeded because it authenticated correctly with the necessary permissions and within the proper administrative context. Although the service account was granted permissions through its client ID, Google Workspace is designed for organizations and their human employees, necessitating this specific authentication procedure. Despite the challenges, I found the experience both stressful and enjoyable!&lt;&#x2F;p&gt;
&lt;h1 id=&quot;ref&quot;&gt;REF&lt;&#x2F;h1&gt;
&lt;ol&gt;
&lt;li&gt;https:&#x2F;&#x2F;www.googlecloudcommunity.com&#x2F;gc&#x2F;Cloud-Hub&#x2F;Admin-SDK-API-Returning-Status-Code-403-Cannot-Figure-Out-Root&#x2F;m-p&#x2F;742710#M6830&lt;&#x2F;li&gt;
&lt;li&gt;https:&#x2F;&#x2F;developers.google.com&#x2F;admin-sdk&#x2F;directory&#x2F;reference&#x2F;rest&#x2F;v1&#x2F;users&#x2F;list#query-parameters&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
        
    </entry>
</feed>
